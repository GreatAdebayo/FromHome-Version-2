{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\FROMHOME\\\\frontend\\\\src\\\\components\\\\landing_page\\\\password-reset.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport Navbar from './navbar';\nimport Footer from './footer';\nimport axios from 'axios';\nimport { Baseurl } from '../baseurl';\nimport { useHistory } from 'react-router';\nimport { useLocation } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PasswordReset = () => {\n  _s();\n\n  const history = useHistory();\n  const path = useLocation();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"about container-fluid mt-4\",\n      id: \"about\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6 col-sm mx-auto\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"login-card\",\n              style: {\n                borderRadius: '10px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"assets/img/logo.png\",\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 22,\n                columnNumber: 33\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 22,\n                columnNumber: 74\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Reset Your Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 23,\n                  columnNumber: 40\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 23,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Formik, {\n                initialValues: {\n                  email: '',\n                  password: ''\n                },\n                validate: values => {\n                  const errors = {};\n\n                  if (!values.email) {\n                    errors.email = '*Email Required';\n                  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n                    errors.email = 'Invalid email address';\n                  } //  else if (!values.password) {\n                  //     errors.password = '*Password Required';\n                  // }\n\n\n                  return errors;\n                },\n                onSubmit: (values, {\n                  setSubmitting\n                }) => {\n                  setTimeout(() => {\n                    axios.post(`${Baseurl}checkemail`, values).then(res => {\n                      if (res.data) {\n                        setSubmitting(false);\n                      }\n                    });\n                  }, 400);\n                },\n                children: ({\n                  isSubmitting\n                }) => /*#__PURE__*/_jsxDEV(Form, {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"row-1\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      class: \"row row-2\",\n                      children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                        id: \"login-card-inner\",\n                        children: \"Email\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 56,\n                        columnNumber: 73\n                      }, this), \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 56,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      class: \"row row-2\",\n                      children: [\" \", /*#__PURE__*/_jsxDEV(Field, {\n                        type: \"email\",\n                        placeholder: \"Registered Email\",\n                        name: \"email\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 57,\n                        columnNumber: 73\n                      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                        name: \"email\",\n                        component: \"small\",\n                        className: \"text-danger\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 58,\n                        columnNumber: 49\n                      }, this), \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 57,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 55,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    class: \"btn d-flex mx-auto\",\n                    type: \"submit\",\n                    disabled: isSubmitting,\n                    children: /*#__PURE__*/_jsxDEV(\"b\", {\n                      children: [isSubmitting ? /*#__PURE__*/_jsxDEV(\"i\", {\n                        class: \"fas fa-spinner fa-spin\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 60,\n                        columnNumber: 137\n                      }, this) : '', \" Proceed\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 60,\n                      columnNumber: 118\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 60,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 24,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(PasswordReset, \"J5dUlDlfpKkloe/gLt+qaJe/hmo=\", false, function () {\n  return [useHistory, useLocation];\n});\n\n_c = PasswordReset;\nexport default PasswordReset;\n\nvar _c;\n\n$RefreshReg$(_c, \"PasswordReset\");","map":{"version":3,"sources":["C:/xampp/htdocs/FROMHOME/frontend/src/components/landing_page/password-reset.js"],"names":["React","Formik","Form","Field","ErrorMessage","Navbar","Footer","axios","Baseurl","useHistory","useLocation","PasswordReset","history","path","borderRadius","email","password","values","errors","test","setSubmitting","setTimeout","post","then","res","data","isSubmitting"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport Navbar from './navbar';\r\nimport Footer from './footer';\r\nimport axios from 'axios';\r\nimport { Baseurl } from '../baseurl';\r\nimport { useHistory } from 'react-router';\r\nimport { useLocation } from 'react-router';\r\n\r\n\r\nconst PasswordReset = () => {\r\n    const history = useHistory();\r\n    const path = useLocation()\r\n    return (\r\n        <>\r\n          <Navbar/>\r\n            <section className=\"about container-fluid mt-4\" id=\"about\">\r\n                <div className='container-fluid'>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6 col-sm mx-auto\">\r\n                            <div class=\"login-card\" style={{ borderRadius: '10px' }}>\r\n                                <img src=\"assets/img/logo.png\" alt=\"\" /> <br />\r\n                                <small><strong>Reset Your Password</strong></small>\r\n                                <Formik\r\n                                    initialValues={{email: '', password: '' }}\r\n                                    validate={values => {\r\n                                        const errors = {};\r\n                                        if (!values.email) {\r\n                                            errors.email = '*Email Required';\r\n                                        } else if (\r\n                                            !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n                                        ) {\r\n                                            errors.email = 'Invalid email address';\r\n                                        }\r\n                                        //  else if (!values.password) {\r\n                                        //     errors.password = '*Password Required';\r\n                                        // }\r\n\r\n                                        return errors;\r\n                                    }}\r\n                                    onSubmit={(values, { setSubmitting }) => {\r\n                                        setTimeout(() => {\r\n                                            axios.post(`${Baseurl}checkemail`, values).then((res)=>{\r\n                                               if(res.data){\r\n                                                setSubmitting(false);\r\n                                                \r\n                                               }\r\n                                            })\r\n                                           \r\n                                        }, 400);\r\n                                    }} >\r\n                                    {({ isSubmitting }) => (\r\n\r\n                                        <Form>\r\n                                            <div class=\"row-1\">\r\n                                                <div class=\"row row-2\"> <span id=\"login-card-inner\">Email</span> </div>\r\n                                                <div class=\"row row-2\"> <Field type=\"email\" placeholder=\"Registered Email\" name=\"email\" />\r\n                                                <ErrorMessage name=\"email\" component=\"small\" className='text-danger' /> </div>\r\n                                            </div>\r\n                                            <button class=\"btn d-flex mx-auto\" type=\"submit\" disabled={isSubmitting}><b>{isSubmitting ? <i class=\"fas fa-spinner fa-spin\"></i> : ''} Proceed</b></button>\r\n                                        </Form>\r\n                                    )}\r\n                                </Formik>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </section>\r\n            <Footer/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PasswordReset\r\n"]},"metadata":{},"sourceType":"module"}