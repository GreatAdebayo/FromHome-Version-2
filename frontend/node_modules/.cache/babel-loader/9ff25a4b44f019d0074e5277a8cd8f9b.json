{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\FROMHOME\\\\frontend\\\\src\\\\components\\\\landing_page\\\\password-reset.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport Navbar from './navbar';\nimport Footer from './footer';\nimport axios from 'axios';\nimport { Baseurl } from '../baseurl';\nimport { useHistory } from 'react-router';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PasswordReset = () => {\n  _s();\n\n  const history = useHistory();\n  const [email, setEmail] = useState('');\n  const [showCode, setShowCode] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"about container-fluid mt-4\",\n      id: \"about\",\n      children: [/*#__PURE__*/_jsxDEV(\"small\", {\n        children: /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6 col-sm mx-auto\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"login-card\",\n              style: {\n                borderRadius: '10px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"assets/img/logo.png\",\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 33\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 74\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Reset Your Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 27,\n                  columnNumber: 40\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 33\n              }, this), showCode === false ? /*#__PURE__*/_jsxDEV(Formik, {\n                initialValues: {\n                  email: ''\n                },\n                validate: values => {\n                  const errors = {};\n\n                  if (!values.email) {\n                    errors.email = '*Email Required';\n                  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n                    errors.email = 'Invalid email address';\n                  }\n\n                  return errors;\n                },\n                onSubmit: (values, {\n                  setSubmitting\n                }) => {\n                  setTimeout(() => {\n                    axios.post(`${Baseurl}checkemail`, values).then(res => {\n                      if (res.data) {\n                        setSubmitting(false);\n                        setShowCode(true);\n                        setEmail(res.data);\n                        toast(\"ðŸ˜” Verification code sent, check email!\", {\n                          autoClose: 2000\n                        });\n                      }\n                    });\n                  }, 400);\n                },\n                children: ({\n                  isSubmitting\n                }) => /*#__PURE__*/_jsxDEV(Form, {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"row-1\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      class: \"row row-2\",\n                      children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                        id: \"login-card-inner\",\n                        children: \"Email\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 61,\n                        columnNumber: 73\n                      }, this), \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 61,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      class: \"row row-2\",\n                      children: [\" \", /*#__PURE__*/_jsxDEV(Field, {\n                        type: \"email\",\n                        placeholder: \"Registered Email\",\n                        name: \"email\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 62,\n                        columnNumber: 73\n                      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                        name: \"email\",\n                        component: \"small\",\n                        className: \"text-danger\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 63,\n                        columnNumber: 53\n                      }, this), \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 62,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 60,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    class: \"btn d-flex mx-auto\",\n                    type: \"submit\",\n                    disabled: isSubmitting,\n                    children: /*#__PURE__*/_jsxDEV(\"b\", {\n                      children: [isSubmitting ? /*#__PURE__*/_jsxDEV(\"i\", {\n                        class: \"fas fa-spinner fa-spin\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 65,\n                        columnNumber: 137\n                      }, this) : '', \" Proceed\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 65,\n                      columnNumber: 118\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 65,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 55\n              }, this) : '', showCode ? /*#__PURE__*/_jsxDEV(Formik, {\n                initialValues: {\n                  code: '',\n                  password: ''\n                },\n                validate: values => {\n                  const errors = {};\n\n                  if (!values.code) {\n                    errors.code = '*Verification Code Required';\n                  } else if (!values.password) {\n                    errors.password = '*Password Required';\n                  } else if (values.password.length < 8) {\n                    errors.password = '*Password Should be 8 characters';\n                  }\n\n                  return errors;\n                },\n                onSubmit: (values, {\n                  setSubmitting\n                }) => {\n                  setTimeout(() => {\n                    values.email = email;\n                    axios.post(`${Baseurl}verifycode`, values).then(res => {\n                      setSubmitting(false);\n\n                      if (res.data === 'PasswordChanged') {\n                        toast(\"ðŸ˜” Password Changed!\", {\n                          autoClose: 2000\n                        });\n                      }\n                    });\n                  }, 400);\n                },\n                children: ({\n                  isSubmitting\n                }) => /*#__PURE__*/_jsxDEV(Form, {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"row-1\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      class: \"row row-2\",\n                      children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                        id: \"login-card-inner\",\n                        children: \"4-digit Code\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 102,\n                        columnNumber: 73\n                      }, this), \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 102,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      class: \"row row-2\",\n                      children: [\" \", /*#__PURE__*/_jsxDEV(Field, {\n                        type: \"number\",\n                        placeholder: \"Enter verification code\",\n                        name: \"code\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 103,\n                        columnNumber: 73\n                      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                        name: \"code\",\n                        component: \"small\",\n                        className: \"text-danger\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 104,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 103,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 101,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"row-1\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      class: \"row row-2\",\n                      children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                        id: \"login-card-inner\",\n                        children: \"Password\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 108,\n                        columnNumber: 73\n                      }, this), \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 108,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      class: \"row row-2\",\n                      children: [\" \", /*#__PURE__*/_jsxDEV(Field, {\n                        type: \"password\",\n                        placeholder: \"Password\",\n                        name: \"password\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 109,\n                        columnNumber: 73\n                      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                        name: \"password\",\n                        component: \"small\",\n                        className: \"text-danger\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 110,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 109,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 107,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    class: \"btn d-flex mx-auto\",\n                    type: \"submit\",\n                    disabled: isSubmitting,\n                    children: /*#__PURE__*/_jsxDEV(\"b\", {\n                      children: [isSubmitting ? /*#__PURE__*/_jsxDEV(\"i\", {\n                        class: \"fas fa-spinner fa-spin\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 113,\n                        columnNumber: 137\n                      }, this) : '', \" Verify\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 113,\n                      columnNumber: 118\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 113,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 45\n              }, this) : '']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(PasswordReset, \"Oyiq/J29Hsmz6u5Yhx70P9hLH/M=\", false, function () {\n  return [useHistory];\n});\n\n_c = PasswordReset;\nexport default PasswordReset;\n\nvar _c;\n\n$RefreshReg$(_c, \"PasswordReset\");","map":{"version":3,"sources":["C:/xampp/htdocs/FROMHOME/frontend/src/components/landing_page/password-reset.js"],"names":["React","useState","Formik","Form","Field","ErrorMessage","Navbar","Footer","axios","Baseurl","useHistory","ToastContainer","toast","PasswordReset","history","email","setEmail","showCode","setShowCode","borderRadius","values","errors","test","setSubmitting","setTimeout","post","then","res","data","autoClose","isSubmitting","code","password","length"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport Navbar from './navbar';\r\nimport Footer from './footer';\r\nimport axios from 'axios';\r\nimport { Baseurl } from '../baseurl';\r\nimport { useHistory } from 'react-router';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\nconst PasswordReset = () => {\r\n    const history = useHistory();\r\n    const [email, setEmail] = useState('')\r\n    const [showCode, setShowCode] = useState(false)\r\n\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <section className=\"about container-fluid mt-4\" id=\"about\">\r\n            <small><ToastContainer /></small>\r\n                <div className='container-fluid'>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6 col-sm mx-auto\">\r\n                            <div class=\"login-card\" style={{ borderRadius: '10px' }}>\r\n                                <img src=\"assets/img/logo.png\" alt=\"\" /> <br />\r\n                                <small><strong>Reset Your Password</strong></small>\r\n                                {/* Check email */}\r\n                                {showCode === false ? <Formik\r\n                                    initialValues={{ email: '' }}\r\n                                    validate={values => {\r\n                                        const errors = {};\r\n                                        if (!values.email) {\r\n                                            errors.email = '*Email Required';\r\n                                        } else if (\r\n                                            !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n                                        ) {\r\n                                            errors.email = 'Invalid email address';\r\n                                        }\r\n\r\n                                        return errors;\r\n                                    }}\r\n                                    onSubmit={(values, { setSubmitting }) => {\r\n                                        setTimeout(() => {\r\n                                            axios.post(`${Baseurl}checkemail`, values).then((res) => {\r\n                                                if (res.data) {\r\n                                                    setSubmitting(false);\r\n                                                    setShowCode(true);\r\n                                                    setEmail(res.data)\r\n                                                    toast(\"ðŸ˜” Verification code sent, check email!\", {\r\n                                                        autoClose: 2000,\r\n                                                      })\r\n                                                }\r\n                                            })\r\n\r\n                                        }, 400);\r\n                                    }} >\r\n                                    {({ isSubmitting }) => (\r\n                                        <Form>\r\n                                            <div class=\"row-1\">\r\n                                                <div class=\"row row-2\"> <span id=\"login-card-inner\">Email</span> </div>\r\n                                                <div class=\"row row-2\"> <Field type=\"email\" placeholder=\"Registered Email\" name=\"email\" />\r\n                                                    <ErrorMessage name=\"email\" component=\"small\" className='text-danger' /> </div>\r\n                                            </div>\r\n                                            <button class=\"btn d-flex mx-auto\" type=\"submit\" disabled={isSubmitting}><b>{isSubmitting ? <i class=\"fas fa-spinner fa-spin\"></i> : ''} Proceed</b></button>\r\n                                        </Form>\r\n                                    )}\r\n                                </Formik> : ''}\r\n\r\n                                {/* Verification Code */}\r\n                                {showCode ? <Formik\r\n                                    initialValues={{code: '', password:''}}\r\n                                    validate={values => {\r\n                                        const errors = {};\r\n                                        if (!values.code) {\r\n                                            errors.code = '*Verification Code Required';\r\n                                        }else if (!values.password) {\r\n                                            errors.password = '*Password Required';\r\n                                          }else if (values.password.length < 8) {\r\n                                            errors.password = '*Password Should be 8 characters';\r\n                                        }\r\n\r\n                                        return errors;\r\n                                    }}\r\n                                    onSubmit={(values, { setSubmitting }) => {\r\n                                        setTimeout(() => {\r\n                                            values.email = email\r\n                                            axios.post(`${Baseurl}verifycode`, values).then((res) => {\r\n                                                setSubmitting(false);\r\n                                                if(res.data === 'PasswordChanged'){\r\n                                                    toast(\"ðŸ˜” Password Changed!\", {\r\n                                                        autoClose: 2000,\r\n                                                      })\r\n                                                }\r\n                                            })\r\n\r\n                                        }, 400);\r\n                                    }} >\r\n                                    {({ isSubmitting }) => (\r\n                                        <Form>\r\n                                            <div class=\"row-1\">\r\n                                                <div class=\"row row-2\"> <span id=\"login-card-inner\">4-digit Code</span> </div>\r\n                                                <div class=\"row row-2\"> <Field type=\"number\" placeholder=\"Enter verification code\" name=\"code\" />\r\n                                                    <ErrorMessage name=\"code\" component=\"small\" className='text-danger' />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"row-1\">\r\n                                                <div class=\"row row-2\"> <span id=\"login-card-inner\">Password</span> </div>\r\n                                                <div class=\"row row-2\"> <Field type=\"password\" placeholder=\"Password\" name=\"password\" />\r\n                                                    <ErrorMessage name=\"password\" component=\"small\" className='text-danger' />\r\n                                                </div>\r\n                                            </div>\r\n                                            <button class=\"btn d-flex mx-auto\" type=\"submit\" disabled={isSubmitting}><b>{isSubmitting ? <i class=\"fas fa-spinner fa-spin\"></i> : ''} Verify</b></button>\r\n                                        </Form>\r\n                                    )}\r\n                                </Formik> : ''}\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </section>\r\n            <Footer />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PasswordReset\r\n"]},"metadata":{},"sourceType":"module"}