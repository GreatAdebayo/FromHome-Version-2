{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\FROMHOME\\\\frontend\\\\src\\\\components\\\\landing_page\\\\password-reset.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport Navbar from './navbar';\nimport Footer from './footer';\nimport axios from 'axios';\nimport { Baseurl } from '../baseurl';\nimport { useHistory } from 'react-router';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PasswordReset = () => {\n  _s();\n\n  document.title = 'Fromhome | Password Reset';\n  const history = useHistory();\n  const [email, setEmail] = useState('');\n  const [showCode, setShowCode] = useState(false);\n  const [showResendloader, setResendloader] = useState(false);\n\n  const resendCode = () => {\n    setResendloader(true);\n    axios.post(`${Baseurl}resendcode`, {\n      email: email\n    }).then(res => {\n      setResendloader(false);\n\n      if (res.data.sent) {\n        toast(`👍 Code sent, check your email!`, {\n          autoClose: 3000\n        });\n      } else if (res.data.error) {\n        toast(`✋ Something is wrong`, {\n          autoClose: 2000\n        });\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"about container-fluid mt-4\",\n      id: \"about\",\n      children: [/*#__PURE__*/_jsxDEV(\"small\", {\n        children: /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 24\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6 col-sm mx-auto\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"login-card\",\n              style: {\n                borderRadius: '10px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"assets/img/logo.png\",\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 33\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 74\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Reset Your Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 45,\n                  columnNumber: 40\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 33\n              }, this), showCode === false ? /*#__PURE__*/_jsxDEV(Formik, {\n                initialValues: {\n                  email: ''\n                },\n                validate: values => {\n                  const errors = {};\n\n                  if (!values.email) {\n                    errors.email = '*Email Required';\n                  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n                    errors.email = 'Invalid email address';\n                  }\n\n                  return errors;\n                },\n                onSubmit: (values, {\n                  setSubmitting\n                }) => {\n                  setTimeout(() => {\n                    axios.post(`${Baseurl}checkemail`, values).then(res => {\n                      if (res.data.notfound) {\n                        setSubmitting(false);\n                        toast(\"✋ Email not Found!\", {\n                          autoClose: 2000\n                        });\n                      } else if (res.data.email) {\n                        setSubmitting(false);\n                        setShowCode(true);\n                        setEmail(res.data.email);\n                        toast(\"👍 Verification code sent, check email!\", {\n                          autoClose: 2000\n                        });\n                      }\n                    });\n                  }, 400);\n                },\n                children: ({\n                  isSubmitting\n                }) => /*#__PURE__*/_jsxDEV(Form, {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"row-1\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      class: \"row row-2\",\n                      children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                        id: \"login-card-inner\",\n                        children: \"Email\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 84,\n                        columnNumber: 73\n                      }, this), \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 84,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      class: \"row row-2\",\n                      children: [\" \", /*#__PURE__*/_jsxDEV(Field, {\n                        type: \"email\",\n                        placeholder: \"Registered Email\",\n                        name: \"email\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 85,\n                        columnNumber: 73\n                      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                        name: \"email\",\n                        component: \"small\",\n                        className: \"text-danger\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 86,\n                        columnNumber: 53\n                      }, this), \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 85,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 83,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    class: \"btn d-flex mx-auto\",\n                    type: \"submit\",\n                    disabled: isSubmitting,\n                    children: /*#__PURE__*/_jsxDEV(\"b\", {\n                      children: [isSubmitting ? /*#__PURE__*/_jsxDEV(\"i\", {\n                        class: \"fas fa-spinner fa-spin\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 88,\n                        columnNumber: 137\n                      }, this) : '', \" \", /*#__PURE__*/_jsxDEV(\"small\", {\n                        children: \"Proceed\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 88,\n                        columnNumber: 182\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 88,\n                      columnNumber: 118\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 88,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 55\n              }, this) : '', showCode ? /*#__PURE__*/_jsxDEV(Formik, {\n                initialValues: {\n                  code: '',\n                  password: ''\n                },\n                validate: values => {\n                  const errors = {};\n\n                  if (!values.code) {\n                    errors.code = '*Verification Code Required';\n                  } else if (Math.ceil(Math.log10(values.code + 1)) > 4) {\n                    errors.code = '*Code is 4-digit';\n                  } else if (Math.ceil(Math.log10(values.code + 1)) < 4) {\n                    errors.code = '*Code is 4-digit';\n                  } else if (!values.password) {\n                    errors.password = '*Password Required';\n                  } else if (values.password.length < 8) {\n                    errors.password = '*Password Should be 8 characters';\n                  }\n\n                  return errors;\n                },\n                onSubmit: (values, {\n                  setSubmitting\n                }) => {\n                  setTimeout(() => {\n                    values.email = email;\n                    axios.post(`${Baseurl}passwordverifycode`, values).then(res => {\n                      setSubmitting(false);\n\n                      if (res.data === 'PasswordChanged') {\n                        history.push('login');\n                      } else if (res.data === 'Invalid or Expired Code') {\n                        toast(\"✋ Incorrect or expired Code!\", {\n                          autoClose: 2000\n                        });\n                      }\n                    });\n                  }, 400);\n                },\n                children: ({\n                  isSubmitting\n                }) => /*#__PURE__*/_jsxDEV(Form, {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"row-1\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      class: \"row row-2\",\n                      children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                        id: \"login-card-inner\",\n                        children: \"4-digit Code\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 131,\n                        columnNumber: 73\n                      }, this), \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 131,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      class: \"row row-2\",\n                      children: [\" \", /*#__PURE__*/_jsxDEV(Field, {\n                        type: \"number\",\n                        placeholder: \"Enter verification code\",\n                        name: \"code\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 132,\n                        columnNumber: 73\n                      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                        name: \"code\",\n                        component: \"small\",\n                        className: \"text-danger\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 133,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 132,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 130,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"row-1\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      class: \"row row-2\",\n                      children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                        id: \"login-card-inner\",\n                        children: \"Password\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 137,\n                        columnNumber: 73\n                      }, this), \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 137,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      class: \"row row-2\",\n                      children: [\" \", /*#__PURE__*/_jsxDEV(Field, {\n                        type: \"password\",\n                        placeholder: \"Password\",\n                        name: \"password\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 138,\n                        columnNumber: 73\n                      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                        name: \"password\",\n                        component: \"small\",\n                        className: \"text-danger\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 139,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 138,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 136,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    class: \"btn d-flex mx-auto\",\n                    type: \"submit\",\n                    disabled: isSubmitting,\n                    children: /*#__PURE__*/_jsxDEV(\"b\", {\n                      children: [isSubmitting ? /*#__PURE__*/_jsxDEV(\"i\", {\n                        class: \"fas fa-spinner fa-spin\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 142,\n                        columnNumber: 137\n                      }, this) : '', \" \", /*#__PURE__*/_jsxDEV(\"small\", {\n                        children: \"Verify\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 142,\n                        columnNumber: 182\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 142,\n                      columnNumber: 118\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 142,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 45\n              }, this) : '', showCode ? /*#__PURE__*/_jsxDEV(\"small\", {\n                style: {\n                  cursor: 'pointer',\n                  color: '#0D826E'\n                },\n                onClick: resendCode,\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: [showResendloader ? /*#__PURE__*/_jsxDEV(\"i\", {\n                    class: \"fas fa-spinner fa-spin\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 146,\n                    columnNumber: 149\n                  }, this) : '', \" Resend Code\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 121\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 45\n              }, this) : '']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(PasswordReset, \"4kuQxd75UC4QT2+WmQMk1UU0wGM=\", false, function () {\n  return [useHistory];\n});\n\n_c = PasswordReset;\nexport default PasswordReset;\n\nvar _c;\n\n$RefreshReg$(_c, \"PasswordReset\");","map":{"version":3,"sources":["C:/xampp/htdocs/FROMHOME/frontend/src/components/landing_page/password-reset.js"],"names":["React","useState","Formik","Form","Field","ErrorMessage","Navbar","Footer","axios","Baseurl","useHistory","ToastContainer","toast","PasswordReset","document","title","history","email","setEmail","showCode","setShowCode","showResendloader","setResendloader","resendCode","post","then","res","data","sent","autoClose","error","borderRadius","values","errors","test","setSubmitting","setTimeout","notfound","isSubmitting","code","password","Math","ceil","log10","length","push","cursor","color"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport Navbar from './navbar';\r\nimport Footer from './footer';\r\nimport axios from 'axios';\r\nimport { Baseurl } from '../baseurl';\r\nimport { useHistory } from 'react-router';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\nconst PasswordReset = () => {\r\n    document.title = 'Fromhome | Password Reset'\r\n    const history = useHistory();\r\n    const [email, setEmail] = useState('')\r\n    const [showCode, setShowCode] = useState(false)\r\n    const [showResendloader, setResendloader] = useState(false)\r\n\r\n    const resendCode = () => {\r\n        setResendloader(true)\r\n        axios.post(`${Baseurl}resendcode`, { email: email }).then((res) => {\r\n            setResendloader(false)\r\n            if (res.data.sent) {\r\n                toast(`👍 Code sent, check your email!`, {\r\n                    autoClose: 3000,\r\n                })\r\n            } else if (res.data.error) {\r\n                toast(`✋ Something is wrong`, {\r\n                    autoClose: 2000,\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <section className=\"about container-fluid mt-4\" id=\"about\">\r\n                <small><ToastContainer /></small>\r\n                <div className='container-fluid'>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6 col-sm mx-auto\">\r\n                            <div class=\"login-card\" style={{ borderRadius: '10px' }}>\r\n                                <img src=\"assets/img/logo.png\" alt=\"\" /> <br />\r\n                                <small><strong>Reset Your Password</strong></small>\r\n                                {/* Check email */}\r\n                                {showCode === false ? <Formik\r\n                                    initialValues={{ email: '' }}\r\n                                    validate={values => {\r\n                                        const errors = {};\r\n                                        if (!values.email) {\r\n                                            errors.email = '*Email Required';\r\n                                        } else if (\r\n                                            !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n                                        ) {\r\n                                            errors.email = 'Invalid email address';\r\n                                        }\r\n\r\n                                        return errors;\r\n                                    }}\r\n                                    onSubmit={(values, { setSubmitting }) => {\r\n                                        setTimeout(() => {\r\n                                            axios.post(`${Baseurl}checkemail`, values).then((res) => {\r\n                                                if (res.data.notfound) {\r\n                                                    setSubmitting(false);\r\n                                                    toast(\"✋ Email not Found!\", {\r\n                                                        autoClose: 2000,\r\n                                                    })\r\n                                                } else if (res.data.email) {\r\n                                                    setSubmitting(false);\r\n                                                    setShowCode(true);\r\n                                                    setEmail(res.data.email)\r\n                                                    toast(\"👍 Verification code sent, check email!\", {\r\n                                                        autoClose: 2000,\r\n                                                    })\r\n                                                }\r\n                                            })\r\n\r\n                                        }, 400);\r\n                                    }} >\r\n                                    {({ isSubmitting }) => (\r\n                                        <Form>\r\n                                            <div class=\"row-1\">\r\n                                                <div class=\"row row-2\"> <span id=\"login-card-inner\">Email</span> </div>\r\n                                                <div class=\"row row-2\"> <Field type=\"email\" placeholder=\"Registered Email\" name=\"email\" />\r\n                                                    <ErrorMessage name=\"email\" component=\"small\" className='text-danger' /> </div>\r\n                                            </div>\r\n                                            <button class=\"btn d-flex mx-auto\" type=\"submit\" disabled={isSubmitting}><b>{isSubmitting ? <i class=\"fas fa-spinner fa-spin\"></i> : ''} <small>Proceed</small></b></button>\r\n                                        </Form>\r\n                                    )}\r\n                                </Formik> : ''}\r\n\r\n                                {/* Verification Code */}\r\n                                {showCode ? <Formik\r\n                                    initialValues={{ code: '', password: '' }}\r\n                                    validate={values => {\r\n                                        const errors = {};\r\n                                        if (!values.code) {\r\n                                            errors.code = '*Verification Code Required';\r\n                                        } else if (Math.ceil(Math.log10(values.code + 1)) > 4) {\r\n                                            errors.code = '*Code is 4-digit';\r\n                                        } else if (Math.ceil(Math.log10(values.code + 1)) < 4) {\r\n                                            errors.code = '*Code is 4-digit';\r\n                                        } else if (!values.password) {\r\n                                            errors.password = '*Password Required';\r\n                                        } else if (values.password.length < 8) {\r\n                                            errors.password = '*Password Should be 8 characters';\r\n                                        }\r\n\r\n                                        return errors;\r\n                                    }}\r\n                                    onSubmit={(values, { setSubmitting }) => {\r\n                                        setTimeout(() => {\r\n                                            values.email = email\r\n                                            axios.post(`${Baseurl}passwordverifycode`, values).then((res) => {\r\n                                                setSubmitting(false);\r\n                                                if (res.data === 'PasswordChanged') {\r\n                                                    history.push('login')\r\n                                                } else if (res.data === 'Invalid or Expired Code') {\r\n                                                    toast(\"✋ Incorrect or expired Code!\", {\r\n                                                        autoClose: 2000,\r\n                                                    })\r\n                                                }\r\n                                            })\r\n\r\n                                        }, 400);\r\n                                    }} >\r\n                                    {({ isSubmitting }) => (\r\n                                        <Form>\r\n                                            <div class=\"row-1\">\r\n                                                <div class=\"row row-2\"> <span id=\"login-card-inner\">4-digit Code</span> </div>\r\n                                                <div class=\"row row-2\"> <Field type=\"number\" placeholder=\"Enter verification code\" name=\"code\" />\r\n                                                    <ErrorMessage name=\"code\" component=\"small\" className='text-danger' />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"row-1\">\r\n                                                <div class=\"row row-2\"> <span id=\"login-card-inner\">Password</span> </div>\r\n                                                <div class=\"row row-2\"> <Field type=\"password\" placeholder=\"Password\" name=\"password\" />\r\n                                                    <ErrorMessage name=\"password\" component=\"small\" className='text-danger' />\r\n                                                </div>\r\n                                            </div>\r\n                                            <button class=\"btn d-flex mx-auto\" type=\"submit\" disabled={isSubmitting}><b>{isSubmitting ? <i class=\"fas fa-spinner fa-spin\"></i> : ''} <small>Verify</small></b></button>\r\n                                        </Form>\r\n                                    )}\r\n                                </Formik> : ''}\r\n                                {showCode ? <small style={{ cursor: 'pointer', color: '#0D826E' }} onClick={resendCode}><strong>{showResendloader ? <i class=\"fas fa-spinner fa-spin\"></i> : ''} Resend Code</strong></small> : ''}\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </section>\r\n            <Footer />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PasswordReset\r\n"]},"metadata":{},"sourceType":"module"}