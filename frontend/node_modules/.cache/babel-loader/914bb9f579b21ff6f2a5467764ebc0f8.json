{"ast":null,"code":"import React from'react';import{Formik,Form,Field,ErrorMessage}from'formik';import Navbar from'./navbar';import Footer from'./footer';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var PasswordReset=function PasswordReset(){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Navbar,{}),/*#__PURE__*/_jsx(\"section\",{className:\"about container-fluid mt-4\",id:\"about\",children:/*#__PURE__*/_jsx(\"div\",{className:\"container-fluid\",children:/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col-md-6 col-sm mx-auto\",children:/*#__PURE__*/_jsxs(\"div\",{class:\"login-card\",style:{borderRadius:'10px'},children:[/*#__PURE__*/_jsx(\"img\",{src:\"assets/img/logo.png\",alt:\"\"}),\" \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"small\",{children:/*#__PURE__*/_jsx(\"strong\",{children:\"Reset Your Password\"})}),/*#__PURE__*/_jsx(Formik,{initialValues:{email:'',password:''},validate:function validate(values){var errors={};if(!values.email){errors.email='*Email Required';}else if(!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)){errors.email='Invalid email address';}else if(!values.password){errors.password='*Password Required';}return errors;},onSubmit:function onSubmit(values,_ref){var setSubmitting=_ref.setSubmitting;setTimeout(function(){alert(JSON.stringify(values,null,2));setSubmitting(false);},400);},children:function children(_ref2){var isSubmitting=_ref2.isSubmitting;return/*#__PURE__*/_jsxs(Form,{children:[/*#__PURE__*/_jsxs(\"div\",{class:\"row-1\",children:[/*#__PURE__*/_jsxs(\"div\",{class:\"row row-2\",children:[\" \",/*#__PURE__*/_jsx(\"span\",{id:\"login-card-inner\",children:\"Email\"}),\" \"]}),/*#__PURE__*/_jsxs(\"div\",{class:\"row row-2\",children:[\" \",/*#__PURE__*/_jsx(Field,{type:\"email\",placeholder:\"Registered Email\",name:\"email\"}),/*#__PURE__*/_jsx(ErrorMessage,{name:\"email\",component:\"small\",className:\"text-danger\"}),\" \"]})]}),/*#__PURE__*/_jsxs(\"div\",{class:\"row-1\",children:[/*#__PURE__*/_jsxs(\"div\",{class:\"row row-2\",children:[\" \",/*#__PURE__*/_jsx(\"span\",{id:\"login-card-inner\",children:\"Password\"}),\" \"]}),/*#__PURE__*/_jsxs(\"div\",{class:\"row row-2\",children:[\" \",/*#__PURE__*/_jsx(Field,{type:\"password\",placeholder:\"Password\",name:\"password\"}),/*#__PURE__*/_jsx(ErrorMessage,{name:\"password\",component:\"small\",className:\"text-danger\"})]})]}),/*#__PURE__*/_jsx(\"button\",{class:\"btn d-flex mx-auto\",type:\"submit\",disabled:isSubmitting,children:/*#__PURE__*/_jsx(\"b\",{children:\"Login\"})})]});}})]})})})})}),/*#__PURE__*/_jsx(Footer,{})]});};export default PasswordReset;","map":{"version":3,"sources":["C:/xampp/htdocs/FROMHOME/frontend/src/components/landing_page/password-reset.js"],"names":["React","Formik","Form","Field","ErrorMessage","Navbar","Footer","PasswordReset","borderRadius","email","password","values","errors","test","setSubmitting","setTimeout","alert","JSON","stringify","isSubmitting"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport Navbar from './navbar';\r\nimport Footer from './footer';\r\n\r\nconst PasswordReset = () => {\r\n    return (\r\n        <>\r\n          <Navbar/>\r\n            <section className=\"about container-fluid mt-4\" id=\"about\">\r\n                <div className='container-fluid'>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6 col-sm mx-auto\">\r\n                            <div class=\"login-card\" style={{ borderRadius: '10px' }}>\r\n                                <img src=\"assets/img/logo.png\" alt=\"\" /> <br />\r\n                                <small><strong>Reset Your Password</strong></small>\r\n                                <Formik\r\n                                    initialValues={{ email: '', password: '' }}\r\n                                    validate={values => {\r\n                                        const errors = {};\r\n                                        if (!values.email) {\r\n                                            errors.email = '*Email Required';\r\n                                        } else if (\r\n                                            !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n                                        ) {\r\n                                            errors.email = 'Invalid email address';\r\n                                        } else if (!values.password) {\r\n                                            errors.password = '*Password Required';\r\n                                        }\r\n\r\n                                        return errors;\r\n                                    }}\r\n                                    onSubmit={(values, { setSubmitting }) => {\r\n                                        setTimeout(() => {\r\n                                            alert(JSON.stringify(values, null, 2));\r\n                                            setSubmitting(false);\r\n                                        }, 400);\r\n                                    }}\r\n                                >\r\n                                    {({ isSubmitting }) => (\r\n\r\n                                        <Form>\r\n\r\n\r\n                                            <div class=\"row-1\">\r\n                                                <div class=\"row row-2\"> <span id=\"login-card-inner\">Email</span> </div>\r\n                                                <div class=\"row row-2\"> <Field type=\"email\" placeholder=\"Registered Email\" name=\"email\" />\r\n                                                    <ErrorMessage name=\"email\" component=\"small\" className='text-danger' /> </div>\r\n                                            </div>\r\n\r\n\r\n                                            <div class=\"row-1\">\r\n                                                <div class=\"row row-2\"> <span id=\"login-card-inner\">Password</span> </div>\r\n                                                <div class=\"row row-2\"> <Field type=\"password\" placeholder=\"Password\" name=\"password\" />\r\n                                                    <ErrorMessage name=\"password\" component=\"small\" className='text-danger' />\r\n                                                </div>\r\n                                            </div>\r\n                                            <button class=\"btn d-flex mx-auto\" type=\"submit\" disabled={isSubmitting}><b>Login</b></button>\r\n                                        </Form>\r\n                                    )}\r\n                                </Formik>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </section>\r\n            <Footer/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PasswordReset\r\n"]},"metadata":{},"sourceType":"module"}