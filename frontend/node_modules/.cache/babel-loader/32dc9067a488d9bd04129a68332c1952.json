{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\FROMHOME\\\\frontend\\\\src\\\\components\\\\landing_page\\\\account_verification.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { useHistory, useParams } from 'react-router';\nimport axios from 'axios';\nimport { Baseurl } from '../baseurl';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Navbar from './navbar';\nimport Footer from './footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AccountVerify = () => {\n  _s();\n\n  const {\n    email\n  } = useParams();\n  const [showloader, setShowloader] = useState(false);\n  const [showResendloader, setResendloader] = useState(false);\n  const history = useHistory();\n\n  const resendCode = () => {\n    setResendloader(true);\n    axios.post(`${Baseurl}resendcode`, {\n      email: email\n    }).then(res => {\n      setResendloader(false);\n\n      if (res.data) {\n        let response = res.data;\n        toast(`👍 ${response}, check your email!`, {\n          autoClose: 3000\n        });\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"about container-fluid mt-4\",\n      id: \"about\",\n      children: [/*#__PURE__*/_jsxDEV(\"small\", {\n        children: /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 24\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6 col-sm mx-auto\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"login-card\",\n              style: {\n                borderRadius: '10px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"assets/img/logo.png\",\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 33\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 74\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Account Verification\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 40,\n                  columnNumber: 40\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Formik, {\n                initialValues: {\n                  code: '',\n                  email: email\n                },\n                validate: values => {\n                  const errors = {};\n\n                  if (!values.code) {\n                    errors.code = '*Code Required';\n                  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n                    errors.email = 'Invalid email address';\n                  }\n\n                  return errors;\n                },\n                onSubmit: (values, {\n                  setSubmitting\n                }) => {\n                  setTimeout(() => {\n                    axios.post(`${Baseurl}verifycode`, values).then(res => {\n                      setSubmitting(false);\n\n                      if (res.data === 'Already Verified') {\n                        let response = res.data;\n                        toast(`✋ ${response}`, {\n                          autoClose: 2000\n                        });\n                        setTimeout(() => history.push('/login'), 2000);\n                      } else if (res.data === 'Invalid or Expired Code') {\n                        let response = res.data;\n                        toast(`✋ ${response}`, {\n                          autoClose: 3000\n                        });\n                      } else if (res.data === 'Verified') {\n                        let response = res.data;\n\n                        if (sessionStorage.path) {\n                          toast(`👍 Successfully ${response}`, {\n                            autoClose: 2000\n                          });\n                          setTimeout(() => history.push(sessionStorage.Path), 2000);\n                          sessionStorage.removeItem('Path');\n                        } else {\n                          toast(`👍 Successfully ${response}`, {\n                            autoClose: 2000\n                          });\n                          setTimeout(() => history.push('/login'), 2000);\n                        }\n                      } else if (res.data === 'User not Found') {\n                        let response = res.data;\n                        toast(`😔 ${response}`, {\n                          autoClose: 3000\n                        });\n                      }\n                    });\n                  }, 400);\n                },\n                children: ({\n                  isSubmitting\n                }) => /*#__PURE__*/_jsxDEV(Form, {\n                  children: [/*#__PURE__*/_jsxDEV(ErrorMessage, {\n                    name: \"email\",\n                    component: \"small\",\n                    className: \"text-danger\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 102,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"row-1\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      class: \"row row-2\",\n                      children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                        id: \"login-card-inner\",\n                        children: \"4-digit Code\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 104,\n                        columnNumber: 73\n                      }, this), \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 104,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      class: \"row row-2\",\n                      children: [\" \", /*#__PURE__*/_jsxDEV(Field, {\n                        type: \"number\",\n                        placeholder: \"Enter verification code\",\n                        name: \"code\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 105,\n                        columnNumber: 73\n                      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                        name: \"code\",\n                        component: \"small\",\n                        className: \"text-danger\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 106,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 105,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 103,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    class: \"btn d-flex mx-auto mb-3\",\n                    type: \"submit\",\n                    disabled: isSubmitting,\n                    children: /*#__PURE__*/_jsxDEV(\"b\", {\n                      children: [isSubmitting ? /*#__PURE__*/_jsxDEV(\"i\", {\n                        class: \"fas fa-spinner fa-spin\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 110,\n                        columnNumber: 142\n                      }, this) : '', \" Submit\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 110,\n                      columnNumber: 123\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 110,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                style: {\n                  cursor: 'pointer',\n                  color: '#0D826E'\n                },\n                onClick: resendCode,\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: [showResendloader ? /*#__PURE__*/_jsxDEV(\"i\", {\n                    class: \"fas fa-spinner fa-spin\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 114,\n                    columnNumber: 137\n                  }, this) : '', \" Resend Code\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 109\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AccountVerify, \"gzUFnRWqrJw3BEXnFiqZdJO6Zl0=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = AccountVerify;\nexport default AccountVerify;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountVerify\");","map":{"version":3,"sources":["C:/xampp/htdocs/FROMHOME/frontend/src/components/landing_page/account_verification.js"],"names":["React","useState","Formik","Form","Field","ErrorMessage","useHistory","useParams","axios","Baseurl","ToastContainer","toast","Navbar","Footer","AccountVerify","email","showloader","setShowloader","showResendloader","setResendloader","history","resendCode","post","then","res","data","response","autoClose","borderRadius","code","values","errors","test","setSubmitting","setTimeout","push","sessionStorage","path","Path","removeItem","isSubmitting","cursor","color"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { useHistory, useParams } from 'react-router';\r\nimport axios from 'axios';\r\nimport { Baseurl } from '../baseurl';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Navbar from './navbar';\r\nimport Footer from './footer';\r\n\r\n\r\nconst AccountVerify = () => {\r\n    const { email } = useParams();\r\n    const [showloader, setShowloader] = useState(false)\r\n    const [showResendloader, setResendloader] = useState(false)\r\n    const history = useHistory();\r\n\r\n    const resendCode = () => {\r\n        setResendloader(true)\r\n        axios.post(`${Baseurl}resendcode`, { email: email }).then((res) => {\r\n            setResendloader(false)\r\n            if (res.data) {\r\n                let response = res.data\r\n                toast(`👍 ${response}, check your email!`, {\r\n                    autoClose: 3000,\r\n                })\r\n            }\r\n        })\r\n    }\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <section className=\"about container-fluid mt-4\" id=\"about\">\r\n                <small><ToastContainer /></small>\r\n                <div className='container-fluid'>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6 col-sm mx-auto\">\r\n                            <div class=\"login-card\" style={{ borderRadius: '10px' }}>\r\n                                <img src=\"assets/img/logo.png\" alt=\"\" /> <br />\r\n                                <small><strong>Account Verification</strong></small>\r\n                                <Formik\r\n                                    initialValues={{ code: '', email: email }}\r\n                                    validate={values => {\r\n                                        const errors = {};\r\n                                        if (!values.code) {\r\n                                            errors.code = '*Code Required';\r\n                                        } else if (\r\n                                            !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n                                        ) {\r\n                                            errors.email = 'Invalid email address';\r\n                                        }\r\n\r\n                                        return errors;\r\n                                    }}\r\n                                    onSubmit={(values, { setSubmitting }) => {\r\n                                        setTimeout(() => {\r\n                                            \r\n                                            axios.post(`${Baseurl}verifycode`, values).then((res) => {\r\n                                                setSubmitting(false);\r\n                                                if (res.data === 'Already Verified') {\r\n                                                    let response = res.data\r\n                                                    toast(`✋ ${response}`, {\r\n                                                        autoClose: 2000,\r\n                                                    })\r\n                                                    setTimeout(() => history.push('/login'), 2000)\r\n\r\n                                                } else if (res.data === 'Invalid or Expired Code') {\r\n                                                    let response = res.data\r\n                                                    toast(`✋ ${response}`, {\r\n                                                        autoClose: 3000,\r\n                                                    })\r\n                                                } else if (res.data === 'Verified') {\r\n                                                   let response = res.data\r\n                                                   if(sessionStorage.path){\r\n                                                    toast(`👍 Successfully ${response}`, {\r\n                                                        autoClose: 2000,\r\n                                                    })\r\n                                                    setTimeout(() =>  history.push(sessionStorage.Path), 2000)\r\n                                                    sessionStorage.removeItem('Path')\r\n                                                   }else{\r\n                                                    toast(`👍 Successfully ${response}`, {\r\n                                                        autoClose: 2000,\r\n                                                    })\r\n                                                    setTimeout(() => history.push('/login'), 2000)\r\n                                                   }\r\n\r\n                                                } else if (res.data === 'User not Found') {\r\n                                                    let response = res.data\r\n                                                    toast(`😔 ${response}`, {\r\n                                                        autoClose: 3000,\r\n                                                    })\r\n                                                }\r\n                                            })\r\n                                           \r\n                                        }, 400);\r\n                                    }}\r\n                                >\r\n                                    {({ isSubmitting }) => (\r\n\r\n                                        <Form>\r\n\r\n                                            <ErrorMessage name=\"email\" component=\"small\" className='text-danger' />\r\n                                            <div class=\"row-1\">\r\n                                                <div class=\"row row-2\"> <span id=\"login-card-inner\">4-digit Code</span> </div>\r\n                                                <div class=\"row row-2\"> <Field type=\"number\" placeholder=\"Enter verification code\" name=\"code\" />\r\n                                                    <ErrorMessage name=\"code\" component=\"small\" className='text-danger' />\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <button class=\"btn d-flex mx-auto mb-3\" type=\"submit\" disabled={isSubmitting}><b>{isSubmitting ? <i class=\"fas fa-spinner fa-spin\"></i> : ''} Submit</b></button>\r\n                                        </Form>\r\n                                    )}\r\n                                </Formik>\r\n                                <small style={{ cursor: 'pointer', color: '#0D826E' }} onClick={resendCode}><strong>{showResendloader ? <i class=\"fas fa-spinner fa-spin\"></i> : ''} Resend Code</strong>\r\n                                </small>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </section>\r\n            <Footer />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AccountVerify\r\n"]},"metadata":{},"sourceType":"module"}