{"ast":null,"code":"import React from'react';import Footer from'./footer';import Navbar from'./navbar';import{Formik,Form,Field,ErrorMessage}from'formik';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var AccountVerify=function AccountVerify(){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Navbar,{}),/*#__PURE__*/_jsx(\"section\",{className:\"about container-fluid mt-4\",id:\"about\",children:/*#__PURE__*/_jsx(\"div\",{className:\"container-fluid\",children:/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col-md-6 col-sm mx-auto\",children:/*#__PURE__*/_jsxs(\"div\",{class:\"login-card\",style:{borderRadius:'10px'},children:[/*#__PURE__*/_jsx(\"small\",{children:/*#__PURE__*/_jsx(\"strong\",{children:\"Account Verification\"})}),/*#__PURE__*/_jsx(Formik,{initialValues:{email:'',password:''},validate:function validate(values){var errors={};if(!values.email){errors.email='*Email Required';}else if(!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)){errors.email='Invalid email address';}else if(!values.password){errors.password='*Password Required';}return errors;},onSubmit:function onSubmit(values,_ref){var setSubmitting=_ref.setSubmitting;setTimeout(function(){alert(JSON.stringify(values,null,2));setSubmitting(false);},400);},children:function children(_ref2){var isSubmitting=_ref2.isSubmitting;return/*#__PURE__*/_jsxs(Form,{children:[/*#__PURE__*/_jsxs(\"div\",{class:\"row-1\",children:[/*#__PURE__*/_jsxs(\"div\",{class:\"row row-2\",children:[\" \",/*#__PURE__*/_jsx(\"span\",{id:\"login-card-inner\",children:\"Code\"}),\" \"]}),/*#__PURE__*/_jsxs(\"div\",{class:\"row row-2\",children:[\" \",/*#__PURE__*/_jsx(Field,{type:\"email\",placeholder:\"Enter verification code\",name:\"email\"}),/*#__PURE__*/_jsx(ErrorMessage,{name:\"email\",component:\"small\",className:\"text-danger\"}),\" \"]})]}),/*#__PURE__*/_jsx(\"button\",{class:\"btn d-flex mx-auto\",type:\"submit\",disabled:isSubmitting,children:/*#__PURE__*/_jsx(\"b\",{children:\"Submit\"})})]});}})]})})})})}),/*#__PURE__*/_jsx(Footer,{})]});};export default AccountVerify;","map":{"version":3,"sources":["C:/xampp/htdocs/elearning/src/components/landing_page/account_verification.js"],"names":["React","Footer","Navbar","Formik","Form","Field","ErrorMessage","AccountVerify","borderRadius","email","password","values","errors","test","setSubmitting","setTimeout","alert","JSON","stringify","isSubmitting"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,OAASC,MAAT,CAAiBC,IAAjB,CAAuBC,KAAvB,CAA8BC,YAA9B,KAAkD,QAAlD,C,6IAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CACxB,mBACI,wCACC,KAAC,MAAD,IADD,cAEC,gBAAS,SAAS,CAAC,4BAAnB,CAAgD,EAAE,CAAC,OAAnD,uBACT,YAAK,SAAS,CAAC,iBAAf,uBACI,YAAK,SAAS,CAAC,KAAf,uBACI,YAAK,SAAS,CAAC,yBAAf,uBACA,aAAK,KAAK,CAAC,YAAX,CAAwB,KAAK,CAAE,CAAEC,YAAY,CAAE,MAAhB,CAA/B,wBACA,oCAAO,gDAAP,EADA,cAGM,KAAC,MAAD,EACE,aAAa,CAAE,CAAEC,KAAK,CAAE,EAAT,CAAaC,QAAQ,CAAE,EAAvB,CADjB,CAEE,QAAQ,CAAE,kBAAAC,MAAM,CAAI,CAClB,GAAMC,CAAAA,MAAM,CAAG,EAAf,CACA,GAAI,CAACD,MAAM,CAACF,KAAZ,CAAmB,CACjBG,MAAM,CAACH,KAAP,CAAe,iBAAf,CACD,CAFD,IAEO,IACL,CAAC,2CAA2CI,IAA3C,CAAgDF,MAAM,CAACF,KAAvD,CADI,CAEL,CACAG,MAAM,CAACH,KAAP,CAAe,uBAAf,CACD,CAJM,IAIA,IAAI,CAACE,MAAM,CAACD,QAAZ,CAAsB,CAC3BE,MAAM,CAACF,QAAP,CAAkB,oBAAlB,CACD,CAED,MAAOE,CAAAA,MAAP,CACD,CAfH,CAgBE,QAAQ,CAAE,kBAACD,MAAD,MAA+B,IAApBG,CAAAA,aAAoB,MAApBA,aAAoB,CACvCC,UAAU,CAAC,UAAM,CACfC,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeP,MAAf,CAAuB,IAAvB,CAA6B,CAA7B,CAAD,CAAL,CACAG,aAAa,CAAC,KAAD,CAAb,CACD,CAHS,CAGP,GAHO,CAAV,CAID,CArBH,UAuBG,4BAAGK,CAAAA,YAAH,OAAGA,YAAH,oBAEC,MAAC,IAAD,yBAGE,aAAK,KAAK,CAAC,OAAX,wBACE,aAAK,KAAK,CAAC,WAAX,4BAAwB,aAAM,EAAE,CAAC,kBAAT,kBAAxB,OADF,cAEE,aAAK,KAAK,CAAC,WAAX,4BAAwB,KAAC,KAAD,EAAO,IAAI,CAAC,OAAZ,CAAoB,WAAW,CAAC,yBAAhC,CAA0D,IAAI,CAAC,OAA/D,EAAxB,cACE,KAAC,YAAD,EAAc,IAAI,CAAC,OAAnB,CAA2B,SAAS,CAAC,OAArC,CAA6C,SAAS,CAAC,aAAvD,EADF,OAFF,GAHF,cASE,eAAQ,KAAK,CAAC,oBAAd,CAAmC,IAAI,CAAC,QAAxC,CAAiD,QAAQ,CAAEA,YAA3D,uBAAyE,6BAAzE,EATF,GAFD,EAvBH,EAHN,GADA,EADJ,EADJ,EADS,EAFD,cAsDC,KAAC,MAAD,IAtDD,GADJ,CA0DH,CA3DD,CA6DA,cAAeZ,CAAAA,aAAf","sourcesContent":["import React from 'react'\r\nimport Footer from './footer'\r\nimport Navbar from './navbar'\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\n\r\nconst AccountVerify = () => {\r\n    return (\r\n        <>\r\n         <Navbar/> \r\n         <section className=\"about container-fluid mt-4\" id=\"about\">  \r\n<div className='container-fluid'>\r\n    <div className=\"row\">\r\n        <div className=\"col-md-6 col-sm mx-auto\">\r\n        <div class=\"login-card\" style={{ borderRadius: '10px' }}>\r\n        <small><strong>Account Verification</strong></small>\r\n\r\n              <Formik\r\n                initialValues={{ email: '', password: '' }}\r\n                validate={values => {\r\n                  const errors = {};\r\n                  if (!values.email) {\r\n                    errors.email = '*Email Required';\r\n                  } else if (\r\n                    !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n                  ) {\r\n                    errors.email = 'Invalid email address';\r\n                  } else if (!values.password) {\r\n                    errors.password = '*Password Required';\r\n                  }\r\n\r\n                  return errors;\r\n                }}\r\n                onSubmit={(values, { setSubmitting }) => {\r\n                  setTimeout(() => {\r\n                    alert(JSON.stringify(values, null, 2));\r\n                    setSubmitting(false);\r\n                  }, 400);\r\n                }}\r\n              >\r\n                {({ isSubmitting }) => (\r\n\r\n                  <Form>\r\n\r\n\r\n                    <div class=\"row-1\">\r\n                      <div class=\"row row-2\"> <span id=\"login-card-inner\">Code</span> </div>\r\n                      <div class=\"row row-2\"> <Field type=\"email\" placeholder=\"Enter verification code\" name=\"email\" />\r\n                        <ErrorMessage name=\"email\" component=\"small\" className='text-danger' /> </div>\r\n                    </div>\r\n\r\n                    <button class=\"btn d-flex mx-auto\" type=\"submit\" disabled={isSubmitting}><b>Submit</b></button>\r\n                  </Form>\r\n                )}\r\n              </Formik>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>\r\n</section>\r\n         <Footer/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AccountVerify\r\n"]},"metadata":{},"sourceType":"module"}